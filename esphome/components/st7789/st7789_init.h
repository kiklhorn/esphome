#pragma once
#include "esphome/core/helpers.h"

namespace esphome {
namespace st7789 {

// clang-format off
static const uint8_t PROGMEM INITCMD_M5STACK[] = {
  0xEF, 3, 0x03, 0x80, 0x02,
  0xCF, 3, 0x00, 0xC1, 0x30,
  0xED, 4, 0x64, 0x03, 0x12, 0x81,
  0xE8, 3, 0x85, 0x00, 0x78,
  0xCB, 5, 0x39, 0x2C, 0x00, 0x34, 0x02,
  0xF7, 1, 0x20,
  0xEA, 2, 0x00, 0x00,
  ST7789_PWCTR1  , 1, 0x23,             // Power control VRH[5:0]
  ST7789_PWCTR2  , 1, 0x10,             // Power control SAP[2:0];BT[3:0]
  ST7789_VMCTR1  , 2, 0x3e, 0x28,       // VCM control
  ST7789_VMCTR2  , 1, 0x86,             // VCM control2
  ST7789_MADCTL  , 1, MADCTL_BGR,       // Memory Access Control
  ST7789_VSCRSADD, 1, 0x00,             // Vertical scroll zero
  ST7789_PIXFMT  , 1, 0x55,
  ST7789_FRMCTR1 , 2, 0x00, 0x13,
  ST7789_DFUNCTR , 3, 0x08, 0x82, 0x27, // Display Function Control
  0xF2, 1, 0x00,                         // 3Gamma Function Disable
  ST7789_GAMMASET , 1, 0x01,             // Gamma curve selected
  ST7789_GMCTRP1 , 15, 0x0F, 0x31, 0x2B, 0x0C, 0x0E, 0x08, // Set Gamma
                        0x4E, 0xF1, 0x37, 0x07, 0x10, 0x03,
                        0x0E, 0x09, 0x00,
  ST7789_GMCTRN1 , 15, 0x00, 0x0E, 0x14, 0x03, 0x11, 0x07, // Set Gamma
                        0x31, 0xC1, 0x48, 0x08, 0x0F, 0x0C,
                        0x31, 0x36, 0x0F,
  ST7789_SLPOUT  , 0x80,                // Exit Sleep
  ST7789_DISPON  , 0x80,                // Display on
  0x00                                   // End of list
};

static const uint8_t PROGMEM INITCMD_TFT[] = {
  0x11, 0x80, // Sleep out
  0x13, 0x80,  // Normal display mode on
  //------------------------------display and color format setting--------------------------------//
  0x36, 1, 0x08,
  0xB6, 2, 0x0A, 0x82,
  0xB0, 2, 0x00, 0xE0, // 5 to 6 bit conversion: r0 = r5, b0 = b5
  0x3A, 1, 0x55, //COLMOD
  0xB2, 5, 0x0C, 0x0C, 0x00, 0x33, 0x33, //ST7789V Frame rate setting
  0xB7, 1, 0x35, // Voltages: VGH / VGL
  //---------------------------------ST7789V Power setting--------------------------------------//
  0xBB, 1, 0x28, // JLX240 display datasheet
  0xC0, 1, 0x0C,
  0xC2, 2, 0x01, 0xFF,
  0xC3, 1, 0x10,  // voltage VRHS
  0xC4, 1, 0x20,
  0xC6, 1, 0x0F,
  0xD0, 2, 0xA4, 0xA1,
   //--------------------------------ST7789V gamma setting---------------------------------------//
  0xE0, 14, 0xD0, 0x00, 0x02, 0x07,0x0A, 0x28, 0x32, 0x44, 0x42, 0x06, 0x0E, 0x12, 0x14, 0x17, 
  0xE1, 14, 0xD0, 0x00, 0x02, 0x07,0x0A, 0x28, 0x31, 0x54, 0x47, 0x0E, 0x1C, 0x17, 0x1B, 0x1E,
  0x21, 0x80,  // 0 NEBO 0x80 ?
  0x2A, 4, 0x00, 0x00, 0x00, 0xE5, //cOLUMN ADDRESS SET, 239
  0x2B, 4, 0x00, 0x00, 0x01, 0x3F, //ROW ADDRESS SET, 319
  0x11, 0x80,                // Exit Sleep
  0x13, 0x80,                // Display on
  0x29, 0x80,
  0x00                                   // End of list
};

// static const uint8_t PROGMEM INITCMD_TFT[] = {
//   0xEF, 3, 0x03, 0x80, 0x02,
//   0xCF, 3, 0x00, 0xC1, 0x30,
//   0xED, 4, 0x64, 0x03, 0x12, 0x81,
//   0xE8, 3, 0x85, 0x00, 0x78,
//   0xCB, 5, 0x39, 0x2C, 0x00, 0x34, 0x02,
//   0xF7, 1, 0x20,
//   0xEA, 2, 0x00, 0x00,
//   ST7789_PWCTR1  , 1, 0x23,             // Power control VRH[5:0]
//   ST7789_PWCTR2  , 1, 0x10,             // Power control SAP[2:0];BT[3:0]
//   ST7789_VMCTR1  , 2, 0x3e, 0x28,       // VCM control
//   ST7789_VMCTR2  , 1, 0x86,             // VCM control2
//   ST7789_MADCTL  , 1, 0x48,             // Memory Access Control
//   ST7789_VSCRSADD, 1, 0x00,             // Vertical scroll zero
//   ST7789_PIXFMT  , 1, 0x55,
//   ST7789_FRMCTR1 , 2, 0x00, 0x18,
//   ST7789_DFUNCTR , 3, 0x08, 0x82, 0x27, // Display Function Control
//   0xF2, 1, 0x00,                         // 3Gamma Function Disable
//   ST7789_GAMMASET , 1, 0x01,             // Gamma curve selected
//   ST7789_GMCTRP1 , 15, 0x0F, 0x31, 0x2B, 0x0C, 0x0E, 0x08, // Set Gamma
//                         0x4E, 0xF1, 0x37, 0x07, 0x10, 0x03,
//                         0x0E, 0x09, 0x00,
//   ST7789_GMCTRN1 , 15, 0x00, 0x0E, 0x14, 0x03, 0x11, 0x07, // Set Gamma
//                         0x31, 0xC1, 0x48, 0x08, 0x0F, 0x0C,
//                         0x31, 0x36, 0x0F,
//   ST7789_SLPOUT  , 0x80,                // Exit Sleep
//   ST7789_DISPON  , 0x80,                // Display on
//   0x00                                   // End of list
// };

// clang-format on
}  // namespace st7789
}  // namespace esphome
